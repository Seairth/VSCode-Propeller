{
  "scopeName": "source.p2asm",
  "name": "P2ASM",
  "fileTypes": ["p2asm", "pasm"],
  "patterns": [
    {
      "begin":"(?i)^\\s*con\\b",
      "end":"(?i)(?=^\\s*(con|dat)\\b)",
      "beginCaptures": {
        "0": {
          "name": "entity.name.section.p2asm"
        }
      },
      "patterns": [
        {
          "include":"#comments"
        },
        {
          "include":"#constants"
        },
        {
          "match":"\\b[_a-zA-Z][_a-zA-Z0-9]*\\b",
          "name":"constant.other.p2asm"
        },
        {
          "match":"=",
          "name":"keyword.operator.assignment.spin"
        },
        {
          "include":"#constants"
        }        
      ]
    },
    {
      "begin":"(?i)^\\s*dat\\b",
      "end":"(?i)(?=^\\s*(con|var|pub|pri|dat)\\b)",
      "beginCaptures": {
        "0": {
          "name": "entity.name.section.p2asm"
        }
      },
      "patterns": [
        {
          "include":"#comments"
        },
        {
          "match":"(?i)\\b(orgh?|byte|word|long|res)\\b",
          "name":"keyword.other.directive.p2asm"
        },
        {
          "match":"(?i)\\b(if_(n?c_(and|or)_n?z|c_(eq|ne)_z|n[cez]|[ab]e?|[cez])|never|always)\\b",
          "name":"constant.language.predicate.p2asm"
        },
        {
          "match":"(?i)\\b(andn?|x?or|muxn?[cz]|not|test[bn]?)\\b",
          "name":"keyword.operator.logical.p2asm"
        },
        {
          "match":"(?i)\\b(s[ah][lr]|r[co][lr])\\b",
          "name":"keyword.operator.shifter.p2asm"
        },
        {
          "match":"(?i)\\b(adds?x?|subs?x?|subr|cmp[srm]?|cmpxs?|cmpsub|mins?|maxs?|sumn?[cz]|muls?|sclu?|abs|neg[cz]?|negn[cz]|(inc|dec)mod)\\b",
          "name":"keyword.operator.math.p2asm"
        },
        {
          "match":"(?i)\\b((get|iso|not|any|clr)b|setbn?[cz]?|(bot|top)one|decod)\\b",
          "name":"keyword.operator.bit.p2asm"
        },
        {
          "match":"(?i)\\b((get|rol|set)(byte|nib|word)|(set|mov)byts|(split|merge)[bw])\\b",
          "name":"keyword.operator.nbw.p2asm"
        },
        {
          "match":"(?i)\\b(getrnd|seuss[fr])\\b",
          "name":"keyword.operator.misc.p2asm"
        },
        {
          "match":"(?i)\\b(mov|set([dsi]|cz)|rev)\\b",
          "name":"keyword.operator.assignment.p2asm"
        },
        {
          "match":"(?i)\\b(setint[1-3]|(get|poll|wait)int|allowi|stalli|setbrk)\\b",
          "name":"keyword.operator.interrupt.p2asm"
        },
        {
          "match":"(?i)\\b((add|poll|wait)ct[1-3]|waitx|getct)\\b",
          "name":"keyword.operator.counter.p2asm"
        },
        {
          "match":"(?i)\\b((poll|wait)pat|setp[ab][pn])\\b",
          "name":"keyword.operator.pattern.p2asm"
        },
        {
          "match":"(?i)\\b(poll|set|wait)(edg|hlk)\\b",
          "name":"keyword.operator.edge.p2asm"
        },
        {
          "match":"(?i)\\b(poll|set|wait)(rdl|wrl)\\b",
          "name":"keyword.operator.hub.p2asm"
        },
        {
          "match":"(?i)\\b(x(init|stop|zero|cont)|(poll|wait)x(mt|fi|ro)|setxfrq|getx(cos|sin))\\b",
          "name":"keyword.operator.streamer.p2asm"
        },
        {
          "match":"(?i)\\bsetdacs\\b",
          "name":"keyword.operator.dac.p2asm"
        },
        {
          "match":"(?i)\\b((add|bln|mix|mul)pix|setpi[vx]|rgb(sqz|exp))\\b",
          "name":"keyword.operator.pixel.p2asm"
        },
        {
          "match":"(?i)\\bsetc([iqy]|frq|mod)\\b",
          "name":"keyword.operator.color.p2asm"
        },
        {
          "match":"(?i)\\b(jmp(rel)?|[dt]jn?[psz]|rep|call[abd]?|ret[ab]?)\\b",
          "name":"keyword.control.branch.p2asm"
        },
        {
          "match":"(?i)\\b(loc|push|pop)\\b",
          "name":"keyword.operator.addressing.p2asm"
        },
        {
          "match":"(?i)\\b((wr|rd)lut|(poll|wait)rle)\\b",
          "name":"keyword.operator.lut.p2asm"
        },
        {
          "match":"(?i)\\b(cog(init|stop)|clkset)\\b",
          "name":"keyword.operator.hubop.p2asm"
        },
        {
          "match":"(?i)\\block(clr|new|ret|set)\\b",
          "name":"keyword.operator.hubop.lock.p2asm"
        },
        {
          "match":"(?i)\\b(cogid|(rd|wr)(byte|long|word)|wmlong)\\b",
          "name":"keyword.operator.hubop.ram.p2asm"
        },
        {
          "match":"(?i)\\b(fblock|(rf|wf)(byte|long|word)|(poll|wait)fbw|(rd|wr)fast|getptr)\\b",
          "name":"keyword.operator.fastblock.p2asm"
        },
        {
          "match":"(?i)\\b(q(div|exp|frac|log|mul|rotate|sqrt|vector)|getq[xy])\\b",
          "name":"keyword.operator.cordic.p2asm"
        },
        {
          "match":"(?i)\\bpin(ack|getz|set[mxy])\\b",
          "name":"keyword.operator.smartpin.p2asm"
        },
        {
          "match":"(?i)\\b(aug[ds]|alt[irds]|setq2?)\\b",
          "name":"keyword.operator.modifier.p2asm"
        },
        {
          "match": "\\$[_0-9a-fA-F]+",
          "name": "constant.numeric.hexidecimal.p2asm"
        },
        {
          "match": "[0-9]+\\.?[_0-9]*",
          "name": "constant.numeric.decimal.psasm"
        },
        {
          "match": "%%[_0-3]+",
          "name": "constant.numeric.quaternary.p2asm"
        },
        {
          "match": "%[_01]+",
          "name": "constant.numeric.binary.p2asm"
        },
        {
          "match":"(?i)\\b(dir|in|out|ptr|adr)[ab]\\b",
          "name":"support.variable.p2asm"
        },
        {
          "match":"(?i)\\b(ijmp|iret)[1-3]\\b",
          "name":"support.variable.p2asm"
        },
        {
          "match":"#[#\\\\@]?|\\bw[cz]\\b",
          "name":"storage.modifier.p2asm"
        },
        {
          "match":"\\b\\.?[_a-zA-Z][_a-zA-Z0-9]*\\b",
          "name":"entity.name.tag.p2asm"
        }
      ]
    },
    {
      "include":"#comments"
    }
  ],
  "repository":
  {
    "comments":
    {
      "patterns":
      [
        {
          "match":"''.*$",
          "name":"comment.line.document.p2asm"
        },
        {
          "match":"'.*$",
          "name":"comment.line.p2asm"
        },
        {
          "begin":"{{",
          "end":"}}",
          "name":"comment.block.document.p2asm"
        },
        {
          "begin":"{",
          "end":"}",
          "name":"comment.block.p2asm"
        }        
      ]
    },
    "constants":
    {
      "patterns":
      [
        {
          "match": "\\$[_0-9a-fA-F]+",
          "name": "constant.numeric.hexidecimal.p2asm"
        },
        {
          "match": "\\b-?[0-9]+\\.?[_0-9]*",
          "name": "constant.numeric.decimal.psasm"
        },
        {
          "match": "%%[_0-3]+",
          "name": "constant.numeric.quaternary.p2asm"
        },
        {
          "match": "%[_01]+",
          "name": "constant.numeric.binary.p2asm"
        }
      ]
    }
  }
}
